This topic, "Derived class" is really interesting and useful. It was interesting change to get to know how to make a relationship between two classes, and how they are connected.
I learned useful, unusual syntax and functionality about the topic, such as the fact that Constructor, Destructor and Copy assignment operator= can't be offered to a derived class because they are special member functions,
'using Base:: - ' keyword to use base class's member functions in a derived class, and the non-default Base class's constructor passing by non-default derived class's constructor will be foundation for any objects of the derived class.

1. Does the Hero class need to know about the existence of the SuperHero
class? (Hint: do a search in Hero.cpp, does the word ¡°SuperHero¡± appear
anywhere?) 

It doesn't have to know it. It's just mostly the derived class borrows this class's a bit of ability.

2. Does the SuperHero class need to know about the existence of the Hero
class? (Hint: do a search in SuperHero.cpp, does the word ¡°Hero¡± appear
anywhere?) 

It HAS TO know it. Otherwise, it is NOT even derived class and the derived class has to know where itself is from, which is the base class.
Any objects created in the derived class should be given foundation of the base class.

3. The program prints out ¡°Ancient Battle!¡± when 2 Heroes fight. It prints out
¡°Super Fight!¡± when 2 SuperHeroes fight. When you tried to make a Hero
fight a SuperHero, what did it print out?

It prints out "Ancient Battle!". I guess it prioritizes base class's function before the derived class.


Quiz 7 Reflection

I got everything correct :)